php artisan model:make App\\Models\\Foo



Выбрать только несколько столбцов
User::where('id', '<>', $user_id)->select('id', 'thing_id')->get(); // collection,  | add ->toArray()

// with foreign\relation entity
 Post::with(array('user'=>function($query){
        $query->select('id','username'); // выберер только id, username
    }))->get();

delete entry via pivot table (many-many)
attach - detach
$customer->drinks()->attach($drink_id)
$shop->products()->detach([321, 654, 987]);
http://laraveldaily.com/pivot-tables-and-many-to-many-relationships/
http://developed.be/2013/08/30/laravel-4-pivot-table-example-attach-and-detach/


Активная загрузка (eager loading) призвана устранить проблему запросов N + 1.
https://laravel.ru/docs/v5/eloquent#активная


Model::whereIn('id', $arrayOfIds)->update(['field' => $value]);




 User::where('id', '<>', $user_id)->get();   // - вернет Eloquent\Collection
 // all() - вренет массив StdObject's   ??

User::where('id', '<>', $user_id)->lists('id')->all(); - вернет массив ids (indexes: 0-N)

DB::table('event_attacks')
            ->leftJoin('users', 'event_attacks.defense_user_id', '=', 'users.id')
            ->where('attack_user_id', '=', $user_id)
            ->select('event_attacks.defense_user_id AS user_id')
            ->addSelect('users.name AS user_name')
            ->addSelect(DB::raw('TIMESTAMPDIFF(SECOND, now(), event_attacks.attack_moment) AS duration_seconds'))
            ->get();
вренет array of StdObject's


Complex condition in Model
        $expiredLots = AuctionLot::where(DB::raw('TIMESTAMPDIFF(SECOND, now(), auction_lot.date_time)'), '<', 0)->get()
        collection model-objects


find(id) - объект класса-модели

RELATIONS

One-to-One
class User extends Eloquent {
    public function user_profile()
    {
        return $this->has_one('User_Profile');
    }
}
One-to-Many
class User_Profile extends Eloquent {
    public function user()
    {
        return $this->belongs_to('User');
    }
    public function photos()
    {
        return $this->has_many('Photo');
    }
    }
}
Many-to-Many
class User extends Eloquent {
    public function groups()
    {
        //if we wanted to override the default naming convention
        //for the intermediate table, we can do it like so:
        //return $this->has_many_and_belongs_to('Group', 'group_listings');

        return $this->has_many_and_belongs_to('Group');
        return $this->has_many_and_belongs_to('User', 'pivot_table_rels', 'this_foreign_key_field_id', 'other_key_id');
    }
}



// RIGHT
// Filter down a users posts in a specfic category (Don't forget the `->get()`)
User::find(1)->posts()->where('category', '=', 'Eloquent')->get();
// Calling methods that use the Query Builder
//   Assuming `recentPosts() = return $this->where('posted_at', '>', /* Today - x days */)`
User::find(1)->posts()->recentPosts()->get();




$user = User::where('u_id', '=', $userid)
            ->where('type', '=', 1)
            ->where('is_active', '=', 1)
            ->select('firstname', 'lastname')
            ->get() / first()

// or
$user = User::where('u_id', '=', $userid)
            ->where('type', '=', 1)
            ->where('is_active', '=', 1)
            ->get(['firstname', 'lastname']) / first(['firstname', 'lastname'])


Illuminate\Database\Eloquent\Builder;
public function select($columns = ['*'])
public function find($id, $columns = ['*'])
public function findMany($ids, $columns = ['*'])
public function updateOrCreate(array $attributes, array $values = [])
    public function first($columns = ['*'])
    public function update(array $values)
    public function where($column, $operator = null, $value = null, $boolean = 'and')
public function get($columns = ['*'])


transactions
https://laracasts.com/discuss/channels/eloquent/how-to-know-transaction-status
    try {
        DB::transaction(function ($data) {
            // do something
        });
    } catch (\Exception $e) {
        return false;
    }

{{ link_to_route('sea_create_order_page', 'Выбрать', ['id' => $ship->id]) }}


$ids = is_array($ids) ? $ids : func_get_args();



https://github.com/laravel/framework/pull/13414
relation count without loading









        return redirect()->back();

        return Redirect::route('work_show_privateteam_page', ['id' => $team->id]);
